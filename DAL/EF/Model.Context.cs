//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Salaries_PRODEntities : DbContext, ISalaries_PRODEntities
    {
        public Salaries_PRODEntities()
            : base("name=Salaries_PRODEntities")
        {
        }
            
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AGE> AGES { get; set; }
        public virtual DbSet<ARTICLE> ARTICLES { get; set; }
        public virtual DbSet<CAREERGROUP> CAREERGROUPS { get; set; }
        public virtual DbSet<CAREER> CAREERS { get; set; }
        public virtual DbSet<CITy> CITIES { get; set; }
        public virtual DbSet<COMMENT> COMMENTS { get; set; }
        public virtual DbSet<COUNTRy> COUNTRIES { get; set; }
        public virtual DbSet<CURRENCy> CURRENCIES { get; set; }
        public virtual DbSet<CURRENCIESUSD> CURRENCIESUSDs { get; set; }
        public virtual DbSet<GENDER> GENDERs { get; set; }
        public virtual DbSet<KINDOFWORK> KINDOFWORKs { get; set; }
        public virtual DbSet<PAYMENT> PAYMENTS { get; set; }
        public virtual DbSet<RANGEGROUP> RANGEGROUPS { get; set; }
        public virtual DbSet<RESTRICTED> RESTRICTEDs { get; set; }
        public virtual DbSet<RESTRICTEDBROWSER> RESTRICTEDBROWSERS { get; set; }
        public virtual DbSet<SALARy> SALARIES { get; set; }
        public virtual DbSet<URL> URLS { get; set; }
        public virtual DbSet<EXPERIENCE> EXPERIENCES { get; set; }
        public virtual DbSet<FEEDBACK> FEEDBACKS { get; set; }
        public virtual DbSet<INTERNALLINK> INTERNALLINKS { get; set; }
        public virtual DbSet<PROCEED> PROCEEDS { get; set; }
        public virtual DbSet<RANx> RANGES { get; set; }
        public virtual DbSet<SALARYANSWER> SALARYANSWERS { get; set; }
        public virtual DbSet<SALARYLEVEL> SALARYLEVELS { get; set; }
        public virtual DbSet<SALARYQUESTION> SALARYQUESTIONS { get; set; }
        public virtual DbSet<STATE> STATES { get; set; }
        public virtual DbSet<VISITOR> VISITORS { get; set; }
        public virtual DbSet<viewSalary> viewSalaries { get; set; }
        public virtual DbSet<viewSalaries_ALL> viewSalaries_ALL { get; set; }
    
        public virtual int Add_Update_PageContent(string contentType, string contentID, string contentText)
        {
            var contentTypeParameter = contentType != null ?
                new ObjectParameter("contentType", contentType) :
                new ObjectParameter("contentType", typeof(string));
    
            var contentIDParameter = contentID != null ?
                new ObjectParameter("contentID", contentID) :
                new ObjectParameter("contentID", typeof(string));
    
            var contentTextParameter = contentText != null ?
                new ObjectParameter("contentText", contentText) :
                new ObjectParameter("contentText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Update_PageContent", contentTypeParameter, contentIDParameter, contentTextParameter);
        }
    
        public virtual int DeleteComment(Nullable<int> commentID)
        {
            var commentIDParameter = commentID.HasValue ?
                new ObjectParameter("CommentID", commentID) :
                new ObjectParameter("CommentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteComment", commentIDParameter);
        }
    
        public virtual ObjectResult<Get_Payment_ForEmail_Result> Get_Payment_ForEmail(string emailID)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Payment_ForEmail_Result>("Get_Payment_ForEmail", emailIDParameter);
        }
    
        public virtual ObjectResult<GetAge_ByID_Result> GetAge_ByID(string ageID)
        {
            var ageIDParameter = ageID != null ?
                new ObjectParameter("ageID", ageID) :
                new ObjectParameter("ageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAge_ByID_Result>("GetAge_ByID", ageIDParameter);
        }
    
        public virtual ObjectResult<string> GetArticleID_ByLocationID(string locationID, string articleType)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("locationID", locationID) :
                new ObjectParameter("locationID", typeof(string));
    
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("articleType", articleType) :
                new ObjectParameter("articleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetArticleID_ByLocationID", locationIDParameter, articleTypeParameter);
        }
    
        public virtual ObjectResult<GetCareer_ByID_Result> GetCareer_ByID(string careerID)
        {
            var careerIDParameter = careerID != null ?
                new ObjectParameter("careerID", careerID) :
                new ObjectParameter("careerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCareer_ByID_Result>("GetCareer_ByID", careerIDParameter);
        }
    
        public virtual ObjectResult<GetCareerGroup_ByID_Result> GetCareerGroup_ByID(string careerGroupID)
        {
            var careerGroupIDParameter = careerGroupID != null ?
                new ObjectParameter("careerGroupID", careerGroupID) :
                new ObjectParameter("careerGroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCareerGroup_ByID_Result>("GetCareerGroup_ByID", careerGroupIDParameter);
        }
    
        public virtual ObjectResult<GetCareerGroups_ALL_Result> GetCareerGroups_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCareerGroups_ALL_Result>("GetCareerGroups_ALL");
        }
    
        public virtual ObjectResult<GetCareerGroupsForSelect_ALL_Result> GetCareerGroupsForSelect_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCareerGroupsForSelect_ALL_Result>("GetCareerGroupsForSelect_ALL");
        }
    
        public virtual ObjectResult<GetCareers_ALL_Result> GetCareers_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCareers_ALL_Result>("GetCareers_ALL");
        }
    
        public virtual ObjectResult<GetCareers_ForCareerGroupID_Result> GetCareers_ForCareerGroupID(string careerGroupID)
        {
            var careerGroupIDParameter = careerGroupID != null ?
                new ObjectParameter("careerGroupID", careerGroupID) :
                new ObjectParameter("careerGroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCareers_ForCareerGroupID_Result>("GetCareers_ForCareerGroupID", careerGroupIDParameter);
        }
    
        public virtual ObjectResult<GetCities_ALL_Result> GetCities_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCities_ALL_Result>("GetCities_ALL");
        }
    
        public virtual ObjectResult<GetCities_ByCountryID_Result> GetCities_ByCountryID(string countryID)
        {
            var countryIDParameter = countryID != null ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCities_ByCountryID_Result>("GetCities_ByCountryID", countryIDParameter);
        }
    
        public virtual ObjectResult<GetCities_ByStateID_Result> GetCities_ByStateID(string stateID)
        {
            var stateIDParameter = stateID != null ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCities_ByStateID_Result>("GetCities_ByStateID", stateIDParameter);
        }
    
        public virtual ObjectResult<GetCity_ByID_Result> GetCity_ByID(string cityID)
        {
            var cityIDParameter = cityID != null ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCity_ByID_Result>("GetCity_ByID", cityIDParameter);
        }
    
        public virtual ObjectResult<GetComment_ByID_Result> GetComment_ByID(Nullable<int> commentID)
        {
            var commentIDParameter = commentID.HasValue ?
                new ObjectParameter("CommentID", commentID) :
                new ObjectParameter("CommentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComment_ByID_Result>("GetComment_ByID", commentIDParameter);
        }
    
        public virtual ObjectResult<GetComments_ByUrlID_Result> GetComments_ByUrlID(string commentForURL)
        {
            var commentForURLParameter = commentForURL != null ?
                new ObjectParameter("CommentForURL", commentForURL) :
                new ObjectParameter("CommentForURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComments_ByUrlID_Result>("GetComments_ByUrlID", commentForURLParameter);
        }
    
        public virtual ObjectResult<GetCountnries_ALL_Result> GetCountnries_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountnries_ALL_Result>("GetCountnries_ALL");
        }
    
        public virtual ObjectResult<GetCountnriesForSelect_ALL_Result> GetCountnriesForSelect_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountnriesForSelect_ALL_Result>("GetCountnriesForSelect_ALL");
        }
    
        public virtual ObjectResult<GetCountries_ALL_Result> GetCountries_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountries_ALL_Result>("GetCountries_ALL");
        }
    
        public virtual ObjectResult<GetCountriesForSelect_ALL_Result> GetCountriesForSelect_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountriesForSelect_ALL_Result>("GetCountriesForSelect_ALL");
        }
    
        public virtual ObjectResult<GetCountry_ByID_Result> GetCountry_ByID(string countryID)
        {
            var countryIDParameter = countryID != null ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountry_ByID_Result>("GetCountry_ByID", countryIDParameter);
        }
    
        public virtual ObjectResult<GetCurrencies_ALL_Result> GetCurrencies_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrencies_ALL_Result>("GetCurrencies_ALL");
        }
    
        public virtual ObjectResult<GetCurrency_ByID_Result> GetCurrency_ByID(string currencyID)
        {
            var currencyIDParameter = currencyID != null ?
                new ObjectParameter("currencyID", currencyID) :
                new ObjectParameter("currencyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrency_ByID_Result>("GetCurrency_ByID", currencyIDParameter);
        }
    
        public virtual ObjectResult<GetEducation_ALL_Result> GetEducation_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEducation_ALL_Result>("GetEducation_ALL");
        }
    
        public virtual ObjectResult<GetEducation_ByID_Result> GetEducation_ByID(string educationID)
        {
            var educationIDParameter = educationID != null ?
                new ObjectParameter("educationID", educationID) :
                new ObjectParameter("educationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEducation_ByID_Result>("GetEducation_ByID", educationIDParameter);
        }
    
        public virtual ObjectResult<GetExperience_ALL_Result> GetExperience_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExperience_ALL_Result>("GetExperience_ALL");
        }
    
        public virtual ObjectResult<GetExperience_ByID_Result> GetExperience_ByID(string experienceID)
        {
            var experienceIDParameter = experienceID != null ?
                new ObjectParameter("experienceID", experienceID) :
                new ObjectParameter("experienceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExperience_ByID_Result>("GetExperience_ByID", experienceIDParameter);
        }
    
        public virtual ObjectResult<GetGender_ByID_Result> GetGender_ByID(string genderID)
        {
            var genderIDParameter = genderID != null ?
                new ObjectParameter("genderID", genderID) :
                new ObjectParameter("genderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGender_ByID_Result>("GetGender_ByID", genderIDParameter);
        }
    
        public virtual int GetGroupedSalaries(string groupBy, string countryID, string stateID, string cityID, string isEUSurvey, string careerGroupID, string careerID, string levelID, string genderID, string eduID, string experienceID, string ageID, string year, string kindOfWork, string startWith)
        {
            var groupByParameter = groupBy != null ?
                new ObjectParameter("groupBy", groupBy) :
                new ObjectParameter("groupBy", typeof(string));
    
            var countryIDParameter = countryID != null ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(string));
    
            var stateIDParameter = stateID != null ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(string));
    
            var cityIDParameter = cityID != null ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(string));
    
            var isEUSurveyParameter = isEUSurvey != null ?
                new ObjectParameter("isEUSurvey", isEUSurvey) :
                new ObjectParameter("isEUSurvey", typeof(string));
    
            var careerGroupIDParameter = careerGroupID != null ?
                new ObjectParameter("careerGroupID", careerGroupID) :
                new ObjectParameter("careerGroupID", typeof(string));
    
            var careerIDParameter = careerID != null ?
                new ObjectParameter("careerID", careerID) :
                new ObjectParameter("careerID", typeof(string));
    
            var levelIDParameter = levelID != null ?
                new ObjectParameter("levelID", levelID) :
                new ObjectParameter("levelID", typeof(string));
    
            var genderIDParameter = genderID != null ?
                new ObjectParameter("genderID", genderID) :
                new ObjectParameter("genderID", typeof(string));
    
            var eduIDParameter = eduID != null ?
                new ObjectParameter("eduID", eduID) :
                new ObjectParameter("eduID", typeof(string));
    
            var experienceIDParameter = experienceID != null ?
                new ObjectParameter("experienceID", experienceID) :
                new ObjectParameter("experienceID", typeof(string));
    
            var ageIDParameter = ageID != null ?
                new ObjectParameter("ageID", ageID) :
                new ObjectParameter("ageID", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var kindOfWorkParameter = kindOfWork != null ?
                new ObjectParameter("kindOfWork", kindOfWork) :
                new ObjectParameter("kindOfWork", typeof(string));
    
            var startWithParameter = startWith != null ?
                new ObjectParameter("startWith", startWith) :
                new ObjectParameter("startWith", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetGroupedSalaries", groupByParameter, countryIDParameter, stateIDParameter, cityIDParameter, isEUSurveyParameter, careerGroupIDParameter, careerIDParameter, levelIDParameter, genderIDParameter, eduIDParameter, experienceIDParameter, ageIDParameter, yearParameter, kindOfWorkParameter, startWithParameter);
        }
    
        public virtual ObjectResult<GetInternalLinks_ByFromID_Result> GetInternalLinks_ByFromID(string fromID, string fromView)
        {
            var fromIDParameter = fromID != null ?
                new ObjectParameter("fromID", fromID) :
                new ObjectParameter("fromID", typeof(string));
    
            var fromViewParameter = fromView != null ?
                new ObjectParameter("fromView", fromView) :
                new ObjectParameter("fromView", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInternalLinks_ByFromID_Result>("GetInternalLinks_ByFromID", fromIDParameter, fromViewParameter);
        }
    
        public virtual ObjectResult<GetKindOfWork_ByID_Result> GetKindOfWork_ByID(string kindofworkID)
        {
            var kindofworkIDParameter = kindofworkID != null ?
                new ObjectParameter("kindofworkID", kindofworkID) :
                new ObjectParameter("kindofworkID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKindOfWork_ByID_Result>("GetKindOfWork_ByID", kindofworkIDParameter);
        }
    
        public virtual ObjectResult<GetPageContent_ByID_Result> GetPageContent_ByID(string contentID)
        {
            var contentIDParameter = contentID != null ?
                new ObjectParameter("contentID", contentID) :
                new ObjectParameter("contentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPageContent_ByID_Result>("GetPageContent_ByID", contentIDParameter);
        }
    
        public virtual ObjectResult<GetPageContent_ByParameters_Result> GetPageContent_ByParameters(string locationID, string articleType, string isEUSurvey)
        {
            var locationIDParameter = locationID != null ?
                new ObjectParameter("locationID", locationID) :
                new ObjectParameter("locationID", typeof(string));
    
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("articleType", articleType) :
                new ObjectParameter("articleType", typeof(string));
    
            var isEUSurveyParameter = isEUSurvey != null ?
                new ObjectParameter("isEUSurvey", isEUSurvey) :
                new ObjectParameter("isEUSurvey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPageContent_ByParameters_Result>("GetPageContent_ByParameters", locationIDParameter, articleTypeParameter, isEUSurveyParameter);
        }
    
        public virtual ObjectResult<GetPageContent_ForID_Result> GetPageContent_ForID(string pForID, string pAticleType)
        {
            var pForIDParameter = pForID != null ?
                new ObjectParameter("pForID", pForID) :
                new ObjectParameter("pForID", typeof(string));
    
            var pAticleTypeParameter = pAticleType != null ?
                new ObjectParameter("pAticleType", pAticleType) :
                new ObjectParameter("pAticleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPageContent_ForID_Result>("GetPageContent_ForID", pForIDParameter, pAticleTypeParameter);
        }
    
        public virtual ObjectResult<GetProceed_ByID_Result> GetProceed_ByID(Nullable<int> proceedID)
        {
            var proceedIDParameter = proceedID.HasValue ?
                new ObjectParameter("ProceedID", proceedID) :
                new ObjectParameter("ProceedID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProceed_ByID_Result>("GetProceed_ByID", proceedIDParameter);
        }
    
        public virtual ObjectResult<GetRange_ByUrlID_Result> GetRange_ByUrlID(string countryID, string urlID)
        {
            var countryIDParameter = countryID != null ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(string));
    
            var urlIDParameter = urlID != null ?
                new ObjectParameter("UrlID", urlID) :
                new ObjectParameter("UrlID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRange_ByUrlID_Result>("GetRange_ByUrlID", countryIDParameter, urlIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetSalariesByCareerAndLocation_Count(string countryID, string stateID, string cityID, string isEUSurvey, string careerGroupID, string careerID, string levelID, string genderID, string eduID, string experienceID, string ageID, string year, string kindOfWork, string startWith)
        {
            var countryIDParameter = countryID != null ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(string));
    
            var stateIDParameter = stateID != null ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(string));
    
            var cityIDParameter = cityID != null ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(string));
    
            var isEUSurveyParameter = isEUSurvey != null ?
                new ObjectParameter("isEUSurvey", isEUSurvey) :
                new ObjectParameter("isEUSurvey", typeof(string));
    
            var careerGroupIDParameter = careerGroupID != null ?
                new ObjectParameter("careerGroupID", careerGroupID) :
                new ObjectParameter("careerGroupID", typeof(string));
    
            var careerIDParameter = careerID != null ?
                new ObjectParameter("careerID", careerID) :
                new ObjectParameter("careerID", typeof(string));
    
            var levelIDParameter = levelID != null ?
                new ObjectParameter("levelID", levelID) :
                new ObjectParameter("levelID", typeof(string));
    
            var genderIDParameter = genderID != null ?
                new ObjectParameter("genderID", genderID) :
                new ObjectParameter("genderID", typeof(string));
    
            var eduIDParameter = eduID != null ?
                new ObjectParameter("eduID", eduID) :
                new ObjectParameter("eduID", typeof(string));
    
            var experienceIDParameter = experienceID != null ?
                new ObjectParameter("experienceID", experienceID) :
                new ObjectParameter("experienceID", typeof(string));
    
            var ageIDParameter = ageID != null ?
                new ObjectParameter("ageID", ageID) :
                new ObjectParameter("ageID", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var kindOfWorkParameter = kindOfWork != null ?
                new ObjectParameter("kindOfWork", kindOfWork) :
                new ObjectParameter("kindOfWork", typeof(string));
    
            var startWithParameter = startWith != null ?
                new ObjectParameter("startWith", startWith) :
                new ObjectParameter("startWith", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSalariesByCareerAndLocation_Count", countryIDParameter, stateIDParameter, cityIDParameter, isEUSurveyParameter, careerGroupIDParameter, careerIDParameter, levelIDParameter, genderIDParameter, eduIDParameter, experienceIDParameter, ageIDParameter, yearParameter, kindOfWorkParameter, startWithParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetSalariesByCareerAndLocation_Count_AllThisMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSalariesByCareerAndLocation_Count_AllThisMonth");
        }
    
        public virtual ObjectResult<Nullable<int>> GetSalariesByCareerAndLocation_Count_AllThisWeek()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSalariesByCareerAndLocation_Count_AllThisWeek");
        }
    
        public virtual ObjectResult<GetSalariesByCareerAndLocation_ForDetails_Result> GetSalariesByCareerAndLocation_ForDetails(string countryID, string stateID, string cityID, string isEUSurvey, string careerGroupID, string careerID, string kindOfWork, string levelID, string genderID, string eduID, string experienceID, string ageID, string year, Nullable<int> startRowIndex, Nullable<int> maxNumRows, string startWith)
        {
            var countryIDParameter = countryID != null ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(string));
    
            var stateIDParameter = stateID != null ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(string));
    
            var cityIDParameter = cityID != null ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(string));
    
            var isEUSurveyParameter = isEUSurvey != null ?
                new ObjectParameter("isEUSurvey", isEUSurvey) :
                new ObjectParameter("isEUSurvey", typeof(string));
    
            var careerGroupIDParameter = careerGroupID != null ?
                new ObjectParameter("careerGroupID", careerGroupID) :
                new ObjectParameter("careerGroupID", typeof(string));
    
            var careerIDParameter = careerID != null ?
                new ObjectParameter("careerID", careerID) :
                new ObjectParameter("careerID", typeof(string));
    
            var kindOfWorkParameter = kindOfWork != null ?
                new ObjectParameter("kindOfWork", kindOfWork) :
                new ObjectParameter("kindOfWork", typeof(string));
    
            var levelIDParameter = levelID != null ?
                new ObjectParameter("levelID", levelID) :
                new ObjectParameter("levelID", typeof(string));
    
            var genderIDParameter = genderID != null ?
                new ObjectParameter("genderID", genderID) :
                new ObjectParameter("genderID", typeof(string));
    
            var eduIDParameter = eduID != null ?
                new ObjectParameter("eduID", eduID) :
                new ObjectParameter("eduID", typeof(string));
    
            var experienceIDParameter = experienceID != null ?
                new ObjectParameter("experienceID", experienceID) :
                new ObjectParameter("experienceID", typeof(string));
    
            var ageIDParameter = ageID != null ?
                new ObjectParameter("ageID", ageID) :
                new ObjectParameter("ageID", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maxNumRowsParameter = maxNumRows.HasValue ?
                new ObjectParameter("maxNumRows", maxNumRows) :
                new ObjectParameter("maxNumRows", typeof(int));
    
            var startWithParameter = startWith != null ?
                new ObjectParameter("startWith", startWith) :
                new ObjectParameter("startWith", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalariesByCareerAndLocation_ForDetails_Result>("GetSalariesByCareerAndLocation_ForDetails", countryIDParameter, stateIDParameter, cityIDParameter, isEUSurveyParameter, careerGroupIDParameter, careerIDParameter, kindOfWorkParameter, levelIDParameter, genderIDParameter, eduIDParameter, experienceIDParameter, ageIDParameter, yearParameter, startRowIndexParameter, maxNumRowsParameter, startWithParameter);
        }
    
        public virtual ObjectResult<GetSalariesByCareerAndLocation_Paged_Result> GetSalariesByCareerAndLocation_Paged(string countryID, string stateID, string cityID, string isEUSurvey, string careerGroupID, string careerID, string kindOfWork, string levelID, string genderID, string eduID, string experienceID, string ageID, string year, Nullable<int> startRowIndex, Nullable<int> maxNumRows, string startWith)
        {
            var countryIDParameter = countryID != null ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(string));
    
            var stateIDParameter = stateID != null ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(string));
    
            var cityIDParameter = cityID != null ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(string));
    
            var isEUSurveyParameter = isEUSurvey != null ?
                new ObjectParameter("isEUSurvey", isEUSurvey) :
                new ObjectParameter("isEUSurvey", typeof(string));
    
            var careerGroupIDParameter = careerGroupID != null ?
                new ObjectParameter("careerGroupID", careerGroupID) :
                new ObjectParameter("careerGroupID", typeof(string));
    
            var careerIDParameter = careerID != null ?
                new ObjectParameter("careerID", careerID) :
                new ObjectParameter("careerID", typeof(string));
    
            var kindOfWorkParameter = kindOfWork != null ?
                new ObjectParameter("kindOfWork", kindOfWork) :
                new ObjectParameter("kindOfWork", typeof(string));
    
            var levelIDParameter = levelID != null ?
                new ObjectParameter("levelID", levelID) :
                new ObjectParameter("levelID", typeof(string));
    
            var genderIDParameter = genderID != null ?
                new ObjectParameter("genderID", genderID) :
                new ObjectParameter("genderID", typeof(string));
    
            var eduIDParameter = eduID != null ?
                new ObjectParameter("eduID", eduID) :
                new ObjectParameter("eduID", typeof(string));
    
            var experienceIDParameter = experienceID != null ?
                new ObjectParameter("experienceID", experienceID) :
                new ObjectParameter("experienceID", typeof(string));
    
            var ageIDParameter = ageID != null ?
                new ObjectParameter("ageID", ageID) :
                new ObjectParameter("ageID", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maxNumRowsParameter = maxNumRows.HasValue ?
                new ObjectParameter("maxNumRows", maxNumRows) :
                new ObjectParameter("maxNumRows", typeof(int));
    
            var startWithParameter = startWith != null ?
                new ObjectParameter("startWith", startWith) :
                new ObjectParameter("startWith", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalariesByCareerAndLocation_Paged_Result>("GetSalariesByCareerAndLocation_Paged", countryIDParameter, stateIDParameter, cityIDParameter, isEUSurveyParameter, careerGroupIDParameter, careerIDParameter, kindOfWorkParameter, levelIDParameter, genderIDParameter, eduIDParameter, experienceIDParameter, ageIDParameter, yearParameter, startRowIndexParameter, maxNumRowsParameter, startWithParameter);
        }
    
        public virtual ObjectResult<GetSalariesByCareerAndLocationForCheck_Paged_Result> GetSalariesByCareerAndLocationForCheck_Paged(string countryID, string stateID, string cityID, string isEUSurvey, string careerGroupID, string careerID, string kindOfWork, string levelID, string genderID, string eduID, string experienceID, string ageID, string year, Nullable<int> startRowIndex, Nullable<int> maxNumRows, string startWith)
        {
            var countryIDParameter = countryID != null ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(string));
    
            var stateIDParameter = stateID != null ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(string));
    
            var cityIDParameter = cityID != null ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(string));
    
            var isEUSurveyParameter = isEUSurvey != null ?
                new ObjectParameter("isEUSurvey", isEUSurvey) :
                new ObjectParameter("isEUSurvey", typeof(string));
    
            var careerGroupIDParameter = careerGroupID != null ?
                new ObjectParameter("careerGroupID", careerGroupID) :
                new ObjectParameter("careerGroupID", typeof(string));
    
            var careerIDParameter = careerID != null ?
                new ObjectParameter("careerID", careerID) :
                new ObjectParameter("careerID", typeof(string));
    
            var kindOfWorkParameter = kindOfWork != null ?
                new ObjectParameter("kindOfWork", kindOfWork) :
                new ObjectParameter("kindOfWork", typeof(string));
    
            var levelIDParameter = levelID != null ?
                new ObjectParameter("levelID", levelID) :
                new ObjectParameter("levelID", typeof(string));
    
            var genderIDParameter = genderID != null ?
                new ObjectParameter("genderID", genderID) :
                new ObjectParameter("genderID", typeof(string));
    
            var eduIDParameter = eduID != null ?
                new ObjectParameter("eduID", eduID) :
                new ObjectParameter("eduID", typeof(string));
    
            var experienceIDParameter = experienceID != null ?
                new ObjectParameter("experienceID", experienceID) :
                new ObjectParameter("experienceID", typeof(string));
    
            var ageIDParameter = ageID != null ?
                new ObjectParameter("ageID", ageID) :
                new ObjectParameter("ageID", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var maxNumRowsParameter = maxNumRows.HasValue ?
                new ObjectParameter("maxNumRows", maxNumRows) :
                new ObjectParameter("maxNumRows", typeof(int));
    
            var startWithParameter = startWith != null ?
                new ObjectParameter("startWith", startWith) :
                new ObjectParameter("startWith", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalariesByCareerAndLocationForCheck_Paged_Result>("GetSalariesByCareerAndLocationForCheck_Paged", countryIDParameter, stateIDParameter, cityIDParameter, isEUSurveyParameter, careerGroupIDParameter, careerIDParameter, kindOfWorkParameter, levelIDParameter, genderIDParameter, eduIDParameter, experienceIDParameter, ageIDParameter, yearParameter, startRowIndexParameter, maxNumRowsParameter, startWithParameter);
        }
    
        public virtual ObjectResult<GetSalariesGroupedByCountriesAll_Result> GetSalariesGroupedByCountriesAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalariesGroupedByCountriesAll_Result>("GetSalariesGroupedByCountriesAll");
        }
    
        public virtual ObjectResult<GetSalaryDetailsByID_Result> GetSalaryDetailsByID(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalaryDetailsByID_Result>("GetSalaryDetailsByID", pIDParameter);
        }
    
        public virtual ObjectResult<GetSalaryURL_BySourceID_Result> GetSalaryURL_BySourceID(string pSourceID, string pKindOfView)
        {
            var pSourceIDParameter = pSourceID != null ?
                new ObjectParameter("pSourceID", pSourceID) :
                new ObjectParameter("pSourceID", typeof(string));
    
            var pKindOfViewParameter = pKindOfView != null ?
                new ObjectParameter("pKindOfView", pKindOfView) :
                new ObjectParameter("pKindOfView", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalaryURL_BySourceID_Result>("GetSalaryURL_BySourceID", pSourceIDParameter, pKindOfViewParameter);
        }
    
        public virtual ObjectResult<GetSalaryURL_ByURLID_Result> GetSalaryURL_ByURLID(string uRLID)
        {
            var uRLIDParameter = uRLID != null ?
                new ObjectParameter("URLID", uRLID) :
                new ObjectParameter("URLID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalaryURL_ByURLID_Result>("GetSalaryURL_ByURLID", uRLIDParameter);
        }
    
        public virtual ObjectResult<GetState_ByID_Result> GetState_ByID(string stateID)
        {
            var stateIDParameter = stateID != null ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetState_ByID_Result>("GetState_ByID", stateIDParameter);
        }
    
        public virtual ObjectResult<GetStates_ALL_Result> GetStates_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStates_ALL_Result>("GetStates_ALL");
        }
    
        public virtual ObjectResult<GetStates_ByCityID_Result> GetStates_ByCityID(string cityID)
        {
            var cityIDParameter = cityID != null ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStates_ByCityID_Result>("GetStates_ByCityID", cityIDParameter);
        }
    
        public virtual ObjectResult<GetStatesForCountryID_ALL_Result> GetStatesForCountryID_ALL(string countryID)
        {
            var countryIDParameter = countryID != null ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStatesForCountryID_ALL_Result>("GetStatesForCountryID_ALL", countryIDParameter);
        }
    
        public virtual ObjectResult<GetVisitor_ByVisitorIP_Result> GetVisitor_ByVisitorIP(string visitorIP)
        {
            var visitorIPParameter = visitorIP != null ?
                new ObjectParameter("visitorIP", visitorIP) :
                new ObjectParameter("visitorIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVisitor_ByVisitorIP_Result>("GetVisitor_ByVisitorIP", visitorIPParameter);
        }
    
        public virtual int Insert_Payment(string emailID, string password, Nullable<System.DateTime> latestPayment, string kindOfPayment, string visitorIP)
        {
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var latestPaymentParameter = latestPayment.HasValue ?
                new ObjectParameter("LatestPayment", latestPayment) :
                new ObjectParameter("LatestPayment", typeof(System.DateTime));
    
            var kindOfPaymentParameter = kindOfPayment != null ?
                new ObjectParameter("KindOfPayment", kindOfPayment) :
                new ObjectParameter("KindOfPayment", typeof(string));
    
            var visitorIPParameter = visitorIP != null ?
                new ObjectParameter("VisitorIP", visitorIP) :
                new ObjectParameter("VisitorIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Payment", emailIDParameter, passwordParameter, latestPaymentParameter, kindOfPaymentParameter, visitorIPParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Insert_Proceed(Nullable<int> proceedID, string visitorIP, string proceedFromPage, string salaryAddedAttempts, string proceedErrors, string salaryAdded)
        {
            var proceedIDParameter = proceedID.HasValue ?
                new ObjectParameter("ProceedID", proceedID) :
                new ObjectParameter("ProceedID", typeof(int));
    
            var visitorIPParameter = visitorIP != null ?
                new ObjectParameter("VisitorIP", visitorIP) :
                new ObjectParameter("VisitorIP", typeof(string));
    
            var proceedFromPageParameter = proceedFromPage != null ?
                new ObjectParameter("ProceedFromPage", proceedFromPage) :
                new ObjectParameter("ProceedFromPage", typeof(string));
    
            var salaryAddedAttemptsParameter = salaryAddedAttempts != null ?
                new ObjectParameter("SalaryAddedAttempts", salaryAddedAttempts) :
                new ObjectParameter("SalaryAddedAttempts", typeof(string));
    
            var proceedErrorsParameter = proceedErrors != null ?
                new ObjectParameter("ProceedErrors", proceedErrors) :
                new ObjectParameter("ProceedErrors", typeof(string));
    
            var salaryAddedParameter = salaryAdded != null ?
                new ObjectParameter("SalaryAdded", salaryAdded) :
                new ObjectParameter("SalaryAdded", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Insert_Proceed", proceedIDParameter, visitorIPParameter, proceedFromPageParameter, salaryAddedAttemptsParameter, proceedErrorsParameter, salaryAddedParameter);
        }
    
        public virtual int Insert_Salary(string country, string city, string careerGroup, string career, string careerDescription, Nullable<int> grossSalary, Nullable<int> netSalary, string experiences, string education, string permanentContract, string gender, Nullable<int> age, string visitorIP)
        {
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var careerGroupParameter = careerGroup != null ?
                new ObjectParameter("CareerGroup", careerGroup) :
                new ObjectParameter("CareerGroup", typeof(string));
    
            var careerParameter = career != null ?
                new ObjectParameter("Career", career) :
                new ObjectParameter("Career", typeof(string));
    
            var careerDescriptionParameter = careerDescription != null ?
                new ObjectParameter("CareerDescription", careerDescription) :
                new ObjectParameter("CareerDescription", typeof(string));
    
            var grossSalaryParameter = grossSalary.HasValue ?
                new ObjectParameter("GrossSalary", grossSalary) :
                new ObjectParameter("GrossSalary", typeof(int));
    
            var netSalaryParameter = netSalary.HasValue ?
                new ObjectParameter("NetSalary", netSalary) :
                new ObjectParameter("NetSalary", typeof(int));
    
            var experiencesParameter = experiences != null ?
                new ObjectParameter("Experiences", experiences) :
                new ObjectParameter("Experiences", typeof(string));
    
            var educationParameter = education != null ?
                new ObjectParameter("Education", education) :
                new ObjectParameter("Education", typeof(string));
    
            var permanentContractParameter = permanentContract != null ?
                new ObjectParameter("PermanentContract", permanentContract) :
                new ObjectParameter("PermanentContract", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var visitorIPParameter = visitorIP != null ?
                new ObjectParameter("VisitorIP", visitorIP) :
                new ObjectParameter("VisitorIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Salary", countryParameter, cityParameter, careerGroupParameter, careerParameter, careerDescriptionParameter, grossSalaryParameter, netSalaryParameter, experiencesParameter, educationParameter, permanentContractParameter, genderParameter, ageParameter, visitorIPParameter);
        }
    
        public virtual int Insert_Visitor(string visitorIP)
        {
            var visitorIPParameter = visitorIP != null ?
                new ObjectParameter("visitorIP", visitorIP) :
                new ObjectParameter("visitorIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Visitor", visitorIPParameter);
        }
    
        public virtual int InsertArticle(string articleType, string articleCountryStateCity, string articleContent, string country)
        {
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("articleType", articleType) :
                new ObjectParameter("articleType", typeof(string));
    
            var articleCountryStateCityParameter = articleCountryStateCity != null ?
                new ObjectParameter("articleCountryStateCity", articleCountryStateCity) :
                new ObjectParameter("articleCountryStateCity", typeof(string));
    
            var articleContentParameter = articleContent != null ?
                new ObjectParameter("articleContent", articleContent) :
                new ObjectParameter("articleContent", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertArticle", articleTypeParameter, articleCountryStateCityParameter, articleContentParameter, countryParameter);
        }
    
        public virtual int InsertComment(string commentForURL, string commentText, Nullable<System.DateTime> commentDate, string authorName, string authorIP)
        {
            var commentForURLParameter = commentForURL != null ?
                new ObjectParameter("CommentForURL", commentForURL) :
                new ObjectParameter("CommentForURL", typeof(string));
    
            var commentTextParameter = commentText != null ?
                new ObjectParameter("CommentText", commentText) :
                new ObjectParameter("CommentText", typeof(string));
    
            var commentDateParameter = commentDate.HasValue ?
                new ObjectParameter("CommentDate", commentDate) :
                new ObjectParameter("CommentDate", typeof(System.DateTime));
    
            var authorNameParameter = authorName != null ?
                new ObjectParameter("AuthorName", authorName) :
                new ObjectParameter("AuthorName", typeof(string));
    
            var authorIPParameter = authorIP != null ?
                new ObjectParameter("AuthorIP", authorIP) :
                new ObjectParameter("AuthorIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertComment", commentForURLParameter, commentTextParameter, commentDateParameter, authorNameParameter, authorIPParameter);
        }
    
        public virtual ObjectResult<IsCityInTheCountry_Result> IsCityInTheCountry(string cityID, string countryID)
        {
            var cityIDParameter = cityID != null ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(string));
    
            var countryIDParameter = countryID != null ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IsCityInTheCountry_Result>("IsCityInTheCountry", cityIDParameter, countryIDParameter);
        }
    
        public virtual ObjectResult<string> IsSalaryForIPAdded_InLast24Months(string pID)
        {
            var pIDParameter = pID != null ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IsSalaryForIPAdded_InLast24Months", pIDParameter);
        }
    
        public virtual int UpdateArticle(string articleType, string articleCountryStateCity, string articleContent)
        {
            var articleTypeParameter = articleType != null ?
                new ObjectParameter("articleType", articleType) :
                new ObjectParameter("articleType", typeof(string));
    
            var articleCountryStateCityParameter = articleCountryStateCity != null ?
                new ObjectParameter("articleCountryStateCity", articleCountryStateCity) :
                new ObjectParameter("articleCountryStateCity", typeof(string));
    
            var articleContentParameter = articleContent != null ?
                new ObjectParameter("articleContent", articleContent) :
                new ObjectParameter("articleContent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateArticle", articleTypeParameter, articleCountryStateCityParameter, articleContentParameter);
        }
    
        public virtual int UpdateCareer(string iD, string uRL, string imageURL)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCareer", iDParameter, uRLParameter, imageURLParameter);
        }
    
        public virtual int UpdateCareerGroup(string iD, string uRL, string imageURL)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCareerGroup", iDParameter, uRLParameter, imageURLParameter);
        }
    
        public virtual int UpdateCity(string iD, string uRL, string imageURL)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCity", iDParameter, uRLParameter, imageURLParameter);
        }
    
        public virtual int UpdateComment(Nullable<int> commentID, string commentText)
        {
            var commentIDParameter = commentID.HasValue ?
                new ObjectParameter("CommentID", commentID) :
                new ObjectParameter("CommentID", typeof(int));
    
            var commentTextParameter = commentText != null ?
                new ObjectParameter("commentText", commentText) :
                new ObjectParameter("commentText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateComment", commentIDParameter, commentTextParameter);
        }
    
        public virtual int UpdateCountry(string iD, string uRL, string imageURL)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCountry", iDParameter, uRLParameter, imageURLParameter);
        }
    
        public virtual int UpdateCurrencyEUR_ByID(string currencyID, Nullable<double> currencyRatioToEUR)
        {
            var currencyIDParameter = currencyID != null ?
                new ObjectParameter("currencyID", currencyID) :
                new ObjectParameter("currencyID", typeof(string));
    
            var currencyRatioToEURParameter = currencyRatioToEUR.HasValue ?
                new ObjectParameter("currencyRatioToEUR", currencyRatioToEUR) :
                new ObjectParameter("currencyRatioToEUR", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCurrencyEUR_ByID", currencyIDParameter, currencyRatioToEURParameter);
        }
    
        public virtual int UpdateCurrencyUSD_ByID(string currencyID, Nullable<double> currencyRatioToUSD)
        {
            var currencyIDParameter = currencyID != null ?
                new ObjectParameter("currencyID", currencyID) :
                new ObjectParameter("currencyID", typeof(string));
    
            var currencyRatioToUSDParameter = currencyRatioToUSD.HasValue ?
                new ObjectParameter("currencyRatioToUSD", currencyRatioToUSD) :
                new ObjectParameter("currencyRatioToUSD", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCurrencyUSD_ByID", currencyIDParameter, currencyRatioToUSDParameter);
        }
    
        public virtual int UpdateProceed_ByID(Nullable<int> proceedID, string visitorIP, string proceedFromPage, string salaryAddedAttempts, string proceedErrors, string salaryAdded)
        {
            var proceedIDParameter = proceedID.HasValue ?
                new ObjectParameter("ProceedID", proceedID) :
                new ObjectParameter("ProceedID", typeof(int));
    
            var visitorIPParameter = visitorIP != null ?
                new ObjectParameter("VisitorIP", visitorIP) :
                new ObjectParameter("VisitorIP", typeof(string));
    
            var proceedFromPageParameter = proceedFromPage != null ?
                new ObjectParameter("ProceedFromPage", proceedFromPage) :
                new ObjectParameter("ProceedFromPage", typeof(string));
    
            var salaryAddedAttemptsParameter = salaryAddedAttempts != null ?
                new ObjectParameter("SalaryAddedAttempts", salaryAddedAttempts) :
                new ObjectParameter("SalaryAddedAttempts", typeof(string));
    
            var proceedErrorsParameter = proceedErrors != null ?
                new ObjectParameter("ProceedErrors", proceedErrors) :
                new ObjectParameter("ProceedErrors", typeof(string));
    
            var salaryAddedParameter = salaryAdded != null ?
                new ObjectParameter("SalaryAdded", salaryAdded) :
                new ObjectParameter("SalaryAdded", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProceed_ByID", proceedIDParameter, visitorIPParameter, proceedFromPageParameter, salaryAddedAttemptsParameter, proceedErrorsParameter, salaryAddedParameter);
        }
    
        public virtual int UpdateState(string iD, string uRL, string imageURL)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateState", iDParameter, uRLParameter, imageURLParameter);
        }
    
        public virtual int UpdateVisitorAttempt_ByVisitorIP(string visitorIP, Nullable<int> currentAttempts)
        {
            var visitorIPParameter = visitorIP != null ?
                new ObjectParameter("visitorIP", visitorIP) :
                new ObjectParameter("visitorIP", typeof(string));
    
            var currentAttemptsParameter = currentAttempts.HasValue ?
                new ObjectParameter("currentAttempts", currentAttempts) :
                new ObjectParameter("currentAttempts", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVisitorAttempt_ByVisitorIP", visitorIPParameter, currentAttemptsParameter);
        }
    }
}
